name: check
on:
  schedule:
    # Daily at 2:00 a.m.
    - cron: '0 2 * * *'
  push:
    branches: [ master ]

jobs:
  vcpkg:
    name: Check vcpkg
    runs-on: windows-latest
    env:
      VCPKG_ROOT: C:\vcpkg
      VCPKG_VERSION: ${{ github.workspace }}/vcpkg_version
      CACHE: ${{ github.workspace }}/checked

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: "Get HEAD"
      id: prepare
      shell: bash
      run: |
        cd ${{ env.VCPKG_ROOT }}
        echo "::set-output name=head::$(git rev-parse --short HEAD)"
    - name: Restore transient info
      uses: actions/cache@v2
      with:
        path: ${{ env.CACHE }}
        key: ${{ steps.prepare.outputs.head }}
    - name: Check version
      id: check
      shell: bash
      run: |
        cd ${{ env.VCPKG_ROOT }}
        LAST = $(cat ${{ env.VCPKG_VERSION }})
        HEAD = ${{ steps.prepare.outputs.head }}
        BRANCH = "vcpkg-$HEAD"
        if [ "$LAST" = "$HEAD" ] ; then
          echo "No update availabe"
          exit 0
        elif [ -f ${{ env.CACHE }} ] && [ "$(cat ${{ env.CACHE }})" = "$HEAD" ] {
          echo "Version $HEAD already checked"
          exit 0
        }
        echo "vcpkg updated from $LAST to $HEAD"
        echo "::set-output name=branch::$BRANCH"
        echo "::set-output name=from::$LAST"
        echo "::set-output name=to::$HEAD"
    - name: Update version
      if: steps.check.outputs.to != ''
      id: update
      run: |
        git checkout -b ${{ steps.check.outputs.branch }}
        Set-Content ${{ env.VCPKG_VERSION }} ${{ steps.check.outputs.to }}
        Set-Content ${{ env.CACHE }} ${{ steps.check.outputs.to }}
        git config --global user.name "bunnybot"
        git config --global user.email "bunnybot@widelands.org"
        git add ${{ env.VCPKG_VERSION }}
        git commit -m "Update vcpkg"
        git push origin ${{ steps.check.outputs.branch }}
    - name: Create pull request for ${{ steps.check.outputs.branch }}
      if: steps.check.outputs.to != ''
      id: create-pr
      uses: actions/github-script@v2
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "Update vcpkg to ${{ steps.check.outputs.to }}",
            head: "${{ steps.check.outputs.branch }}",
            base: "master",
            body: `Update vcpkg from **[${{ steps.check.outputs.from }}](https://github.com/microsoft/vcpkg/commit/${{ steps.check.outputs.from }})** to **[${{ steps.check.outputs.to }}](https://github.com/microsoft/vcpkg/commit/${{ steps.check.outputs.to }})**`
          })
